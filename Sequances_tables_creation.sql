-- Create Sequences for auto-incrementing primary keys
CREATE SEQUENCE PATIENT_ID_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE DOCTOR_ID_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE APPOINTMENT_ID_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TREATMENT_ID_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE MEDICINE_ID_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE PRESCRIPTION_ID_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE BILL_ID_SEQ START WITH 1 INCREMENT BY 1;

-- PATIENTS table
CREATE TABLE PATIENTS (
    PATIENT_ID    NUMBER DEFAULT PATIENT_ID_SEQ.NEXTVAL PRIMARY KEY,
    FIRST_NAME    VARCHAR2(50) NOT NULL,
    LAST_NAME    VARCHAR2(50) NOT NULL,
    DATE_OF_BIRTH    DATE NOT NULL,
    GENDER    VARCHAR2(10) CHECK (GENDER IN ('Male', 'Female')),
    PHONE_NUMBER    VARCHAR2(15),
    ADDRESS    VARCHAR2(200)
);

-- DOCTORS table
CREATE TABLE DOCTORS (
    DOCTOR_ID    NUMBER DEFAULT DOCTOR_ID_SEQ.NEXTVAL PRIMARY KEY,
    FIRST_NAME    VARCHAR2(50) NOT NULL,
    LAST_NAME    VARCHAR2(50) NOT NULL,
    SPECIALIZATION    VARCHAR2(100) NOT NULL,
    PHONE_NUMBER    VARCHAR2(15),
    EMAIL    VARCHAR2(100) UNIQUE
);

-- APPOINTMENTS table
CREATE TABLE APPOINTMENTS (
    APPOINTMENT_ID   NUMBER DEFAULT APPOINTMENT_ID_SEQ.NEXTVAL PRIMARY KEY,
    PATIENT_ID    NUMBER NOT NULL,
    DOCTOR_ID    NUMBER NOT NULL,
    APPOINTMENT_DATE DATE NOT NULL,
    STATUS    VARCHAR2(20) CHECK (STATUS IN ('Scheduled', 'Completed', 'Pending', 'Cancelled', 'Unpaid')),
    NOTES    VARCHAR2(500),
    CONSTRAINT FK_Patient FOREIGN KEY (PATIENT_ID) REFERENCES PATIENTS (PATIENT_ID),
    CONSTRAINT FK_Doctor FOREIGN KEY (DOCTOR_ID) REFERENCES DOCTORS (DOCTOR_ID)
);

-- TREATMENTS table
CREATE TABLE TREATMENTS (
    TREATMENT_ID   NUMBER DEFAULT TREATMENT_ID_SEQ.NEXTVAL PRIMARY KEY,
    APPOINTMENT_ID    NUMBER NOT NULL,
    TREATMENT_TYPE    VARCHAR2(100),
    DESCRIPTION    VARCHAR2(500),
    COST    NUMBER(10,2),
    CONSTRAINT FK_Treatment_Appointment FOREIGN KEY (APPOINTMENT_ID) REFERENCES APPOINTMENTS (APPOINTMENT_ID)
);

-- MEDICINES table
CREATE TABLE MEDICINES (
    MEDICINE_ID    NUMBER DEFAULT MEDICINE_ID_SEQ.NEXTVAL PRIMARY KEY,
    NAME    VARCHAR2(100) NOT NULL,
    MANUFACTURER    VARCHAR2(100),
    PRICE    NUMBER(10,2) CHECK (PRICE>0),
    STOCK_QUANTITY    NUMBER
);

-- PRESCRIPTIONS table
CREATE TABLE PRESCRIPTIONS (
    PRESCRIPTION_ID NUMBER DEFAULT PRESCRIPTION_ID_SEQ.NEXTVAL PRIMARY KEY,
    APPOINTMENT_ID NUMBER NOT NULL,
    MEDICINE_ID NUMBER NOT NULL,
    QUANTITY NUMBER,
    DOSAGE VARCHAR2(200),
    CONSTRAINT FK_Prescription_Appointment FOREIGN KEY (APPOINTMENT_ID) REFERENCES APPOINTMENTS (APPOINTMENT_ID),
    CONSTRAINT FK_Prescription_Medicine FOREIGN KEY (MEDICINE_ID) REFERENCES MEDICINES (MEDICINE_ID)
);

-- BILLS table
CREATE TABLE BILLS (
    BILL_ID NUMBER DEFAULT BILL_ID_SEQ.NEXTVAL PRIMARY KEY,
    APPOINTMENT_ID NUMBER NOT NULL,
    TOTAL_AMOUNT NUMBER(10,2) NOT NULL,
    PAYMENT_STATUS VARCHAR2(20) CHECK (PAYMENT_STATUS IN ('Paid', 'Pending', 'Unpaid')),
    PAYMENT_DATE DATE,
    CONSTRAINT FK_Bill_Appointment FOREIGN KEY (APPOINTMENT_ID) REFERENCES APPOINTMENTS (APPOINTMENT_ID)
);